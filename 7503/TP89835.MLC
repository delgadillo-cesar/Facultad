* REGISTROS
* 4: TOP STACK
* 5: TOP HEAP
* 7: INVOCACION A RUTINA
TP89835  SUBENTRY BASES=(3)
         LA    4,STACK
         LA    5,HEAP
         BAL   7,LOADDATA
         CLI   FLAGERR,X'00'
         BNE    SALIR
         BAL   7,PROCESAR
         BAL   7,MOSTRAR
SALIR    SUBEXIT


* REGISTROS
* 4: TOP STACK
* 6: ELEMENTO STACK
* 7: RETORNO
PUSH     ST    6,0(4)
         A     4,=F'4'
         BR    7


* REGISTROS
* 4: TOP STACK
* 6: ELEMENTO STACK
* 7: RETORNO
POP      S     4,=F'4'
         L     6,0(4)
         BR    7


* REGISTROS
* 5: TOP HEAP
* 6: IN--> BYTES A RESERVAR
*   OUT --> DIRECCION RESERVADA
* 7: RETORNO
MALLOC   ST    5,AUX
         AR    5,6
         L     6,AUX
         BR    7         


* REGISTROS
* 6: REGISTRO BPF C/S
* 7: DIRECCION DE RETORNO
* MEMORIA
* ZONEADO: ZONEADO DE 2 BYTES CONVERTIDO
RTOZ     CVD   6,DOBLE
         ZAP   EMPAQ,DOBLE
         UNPK  ZONEADO,EMPAQ
         MVZ   ZONEADO,=XL2'F0F0'
         BR    7


* REGISTROS
* 7: DIRECCION DE RETORNO
* 8: PRIMER NIBBLE
* 9: SEGUNDO NIBBLE
* MEMORIA
* EMPAQ: EMPAQUETADO DE 2 BYTES A VALIDAR
* FLAGERR: 00 --> OK
*          FF --> ERROR
VALEMPAQ LA    8,0
         IC    8,EMPAQ
         SRDL  8,4
         SRL   9,28
         CL    8,=F'9'
         BH    EMPAQERR
         CL    9,=F'9'
         BH    EMPAQERR
         LA    8,0
         IC    8,EMPAQ+1
         SRDL  8,4
         SRL   9,28
         CL    8,=F'9'
         BH    EMPAQERR
         CL    9,=F'10'
         BL    EMPAQERR
         CL    9,=F'15'
         BH    EMPAQERR
         MVI   FLAGERR,X'00'
         BR    7
EMPAQERR MVI   FLAGERR,X'FF'
         MVC   TEXTO(20),=C'EMPAQUETADO INVALIDO'
         BR    7


* REGISTROS
* 7: DIRECCION DE RETORNO
* MEMORIA
* EMPAQ: EMPAQUETADO DE 2 BYTES A VALIDAR
* FLAGERR: 00 --> OK
*          FF --> ERROR
VALCANT  CP    EMPAQ,=P'1'
         BL    CANTERR
         CP    EMPAQ,=P'20'
         BH    CANTERR
         MVI   FLAGERR,X'00'
         BR    7
CANTERR  MVI   FLAGERR,X'FF'
         MVC   TEXTO(31),=C'CANTIDAD DE ESTACIONES INVALIDA'
         BR    7


* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 8: ESTACION 1
* 9: ESTACION 2
* 12: CANTIDAD MAXIMA DE ESTACIONES
VALTRAMO LR    6,7
         BAL   7,PUSH
         MVC   TEXTO(7),=C'(XX,XX)'
         LR    6,8
         BAL   7,RTOZ
         MVC   TEXTO+1(2),ZONEADO
         LR    6,9
         BAL   7,RTOZ
         MVC   TEXTO+4(2),ZONEADO
         CL    8,=F'1'
         BL    TRAMOERR
         CLR   8,12
         BH    TRAMOERR
         CL    9,=F'1'
         BL    TRAMOERR
         CLR   9,12
         BH    TRAMOERR
         CLR   8,9
         BE    TRAMOERR
         MVI   FLAGERR,X'00'
         BAL   7,POP
         LR    7,6
         BR    7
TRAMOERR MVI   FLAGERR,X'FF'
         MVC   TEXTO+7(17),=C': TRAMO RECHAZADO'
         BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 12: CANTIDAD MAXIMA DE ESTACIONES
LOADCANT LR    6,7
         BAL   7,PUSH
         MVC   EMPAQ,ARCHGET
         BAL   7,VALEMPAQ
         CLI   FLAGERR,X'FF'
         BE    ERRARCH
         BAL   7,VALCANT
         CLI   FLAGERR,X'FF'
         BE    ERRARCH
         MVC   TEXTO(24),=C'CANTIDAD DE ESTACIONES: '
         UNPK  ZONEADO,EMPAQ
         MVZ   ZONEADO,=XL2'F0F0'
         MVC   TEXTO+24(2),ZONEADO
         BAL   7,IMPRIMIR
         ZAP   DOBLE,EMPAQ
         CVB   9,DOBLE
         LR    12,9
         BAL   7,INIVECT
         MVI   FLAGERR,X'00'
         B     FINLOAD
ERRARCH  BAL   7,IMPRIMIR
FINLOAD  BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 8: ESTACION 1
* 9: ESTACION 2
* 12: CANTIDAD MAXIMA DE ESTACIONES
LOADDATA LR    6,7
         BAL   7,PUSH
         OPEN  (ARCH,(INPUT))
         MVI   FLAGERR,X'FE'
         GET   ARCH,ARCHGET
         BAL   7,LOADCANT
         CLI   FLAGERR,X'FF'
         BE    FINARCH
         LA    8,0
         LA    9,0
         MVC   TEXTO(18),=C'CARGANDO TRAMOS...'
         BAL   7,IMPRIMIR
LEERTRAM GET   ARCH,ARCHGET
         IC    8,ARCHGET
         IC    9,ARCHGET+1
         BAL   7,VALTRAMO
         CLI   FLAGERR,X'FF'
         BE    TRAMRECH
         BAL   7,LOADTRAM
         IC    8,ARCHGET+1
         IC    9,ARCHGET
         BAL   7,LOADTRAM
TRAMRECH BAL   7,IMPRIMIR
         MVI   FLAGERR,X'00'
         B     LEERTRAM
FINARCH  CLI   FLAGERR,X'FE'
         BNE   CERRAR
         MVC   TEXTO(13),=C'ARCHIVO VACIO'
         BAL   7,IMPRIMIR
CERRAR   CLOSE ARCH
         BAL   7,POP
         LR    7,6
         BR    7

         
* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 8: VECTOR DE ESTACIONES
* 9: CANTIDAD DE ESTACIONES
INIVECT  LA    8,VECEST
OTRAEST  MVI   0(8),C'N'
         MVC   1(4,8),=F'-1'
         A     8,=F'5'
         BCT   9,OTRAEST
         BR    7


* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 8: ESTACION 1
* 9: ESTACION 2
* 10: AUX
* 11: AUX
LOADTRAM LR    6,7
         BAL   7,PUSH
         S     8,=F'1'
         LA    10,0
         LR    11,8
         M     10,=F'5'
         LA    10,VECEST
         AR    10,11
         MVC   NODOVEC,0(10)
         CLC   DIRLIST,=F'-1'
         BE    NEWNODE
         L     10,DIRLIST
LEERNODO MVC   NODLIST,0(10)
         CLC   DIRSIG,=F'-1'
         BE    NEWNODE
         L     10,DIRSIG
         B     LEERNODO
NEWNODE  L     6,=F'5'
         BAL   7,MALLOC
         ST    6,1(10)
         STC   9,0(6)
         MVC   1(4,6),=F'-1'
         BAL   7,POP
         LR    7,6
         BR    7



* REGISTROS
* 7: RETORNO
* 10: DIRECCION DEL NODO DE LINEA ACTUAL
NEWLINEA LR    6,7
         BAL   7,PUSH
         LA    6,8
         BAL   7,MALLOC
         CLC   LINEAS,=F'-1'
         BNE   NOFIRST
         ST    6,LINEAS
         B     GENNODO
NOFIRST  ST    6,4(10)
GENNODO  LR    10,6
         LA    6,21
         BAL   7,MALLOC
         ST    6,0(10)
         MVI   0(6),X'FF'
         MVC   4(4,10),=F'-1'
         BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS
* 6: VALOR A AGREGAR
* 7: RETORNO
* 10: DIRECCION DEL NODO DE LINEA ACTUAL
* 11: POSICION DEL VECTOR
ADDTOLIN L     11,0(10)
BUSCAR   CLI   0(11),X'FF'
         BE    ULTIMO
         A     11,=F'1'
         B     BUSCAR
ULTIMO   STC   6,0(11)
         MVI   1(11),X'FF'
         BR    7


* REGISTROS:
* 7: DIRECCION DE RETORNO
* 8: VECTOR ESTACIONES
* 11: AUX
* 12: NODO ACTUAL DE LA LISTA DE RELACIONES
PROCREL  LR    6,7
         BAL   7,PUSH
OTRAREL  CL    12,=F'-1'
         BE    OMITEREL
         LR    6,12
         BAL   7,PUSH
         MVC   NODLIST,0(12)
         LA    6,0
         IC    6,ESTACION
         BAL   7,PROCEST
         BAL   7,POP
         LR    12,6
         MVC   NODLIST,0(12)
         L     12,DIRSIG
         B     OTRAREL
OMITEREL BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS: 
* 6: ESTACION
* 7: DIRECCION DE RETORNO
* 8: VECTOR ESTACIONES
* 11: AUX
* 12: NODO ACTUAL DE LA LISTA DE RELACIONES
PROCEST  LR    11,6
         LR    6,7
         BAL   7,PUSH
         LR    7,11
         S     7,=F'1'
         LA    6,0
         M     6,=F'5'
         LA    8,VECEST
         AR    8,7
         MVC   NODOVEC,0(8)
         CLI   FLAG,C'N'
         BNE   OMITIRE
         MVI   FLAG,C'S'
         MVC   0(5,8),NODOVEC
         LR    6,11
         BAL   7,ADDTOLIN
         L     12,DIRLIST
         BAL   7,PROCREL
OMITIRE  BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS
* 7: RETORNO
* 8: VECTOR ESTACIONES
* 9: CONTADOR DE REPETICION
* 10: DIRECCION DEL NODO DE LINEA ACTUAL
PROCESAR LR    6,7
         BAL   7,PUSH
         MVC   TEXTO(13),=C'PROCESANDO...'
         BAL   7,IMPRIMIR
         LA    8,VECEST
         LA    9,20
OTRO     MVC   NODOVEC,0(8)
         CLI   FLAG,C'N'
         BNE   OMITIR
         CLC   DIRLIST,=F'-1'
         BE    OMITIR
         BAL   7,NEWLINEA
         LR    6,8
         BAL   7,PUSH
         LA    6,21
         SR    6,9
         BAL   7,PROCEST
         BAL   7,POP
         LR    8,6
OMITIR   A     8,=F'5'
         BCT   9,OTRO
         BAL   7,POP
         LR    7,6
         BR    7



* REGISTROS:
* 7: DIRECCION DE RETORNO
* 9: PUNTERO AL ELEMENTO DE LA LISTA DE ESTACIONES
* 10: POSICION DEL STRING
* 11: AUX
TEXTEST  LR    6,7
         BAL   7,PUSH
         LA    6,0
         IC    6,0(9)
         BAL   7,RTOZ
         MVC   0(2,10),ZONEADO
         MVC   2(2,10),=CL2', '
         A     10,=F'4'
         BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS:
* 7: DIRECCION DE RETORNO
* 10: POSICION DEL STRING
IMPRIMIR WTO   MF=(E,WTOBLOCK)
         LA    10,TEXTO
         MVC   0(80,10),VACIO
         BR    7


* REGISTROS: 
* 6: ITERADOR 1
* 7: DIRECCION DE RETORNO, ITERADOR 2
* 9: PUNTERO AL ELEMENTO DE LA LISTA DE ESTACIONES
* 12: SWAP
ORDENAR  LR    6,7
         BAL   7,PUSH
         LR    7,9
ITERAR1  CLI   0(7),X'FF'
         BE    FININT1
         LR    6,7
         A     6,=F'1'
ITERAR2  CLI   0(6),X'FF'
         BE    FININT2
         CLC   0(1,7),0(6)
         BNH   OMIT
         IC    12,0(7)
         MVC   0(1,7),0(6)
         STC   12,0(6)
OMIT     A     6,=F'1'
         B     ITERAR2
FININT2  A     7,=F'1'
         B     ITERAR1
FININT1  BAL   7,POP
         LR    7,6
         BR    7


* REGISTROS: 
* 7: DIRECCION DE RETORNO
* 8: PUNTERO AL NODO DE LINEA
* 9: PUNTERO AL ELEMENTO DE LA LISTA DE ESTACIONES
* 10: POSICION DEL STRING
* 11: CONTADOR DE LINEAS
MOSTRAR  LR    6,7
         BAL   7,PUSH
         LA    10,TEXTO
         L     8,LINEAS
         LA    11,0
OTRALINE A     11,=F'1'
         CL    8,=F'-1'
         BE    NADAMOST
         MVC   TEXTO(10),=C'LINEA XX: '
         LR    6,11
         BAL   7,RTOZ
         MVC   TEXTO+6(2),ZONEADO
         A     10,=F'10'
         L     9,0(8)
         BAL   7,ORDENAR
OTRAESTA CLI   0(9),X'FF'
         BE    FINLINEA
         BAL   7,TEXTEST
         A     9,=F'1'
         B     OTRAESTA
FINLINEA S     10,=F'2'
         MVI   0(10),C'.'
         BAL   7,IMPRIMIR
         L     8,4(8)
         B     OTRALINE
NADAMOST BAL   7,POP
         LR    7,6
         BR    7


STACK    DS    100FL1
HEAP     DS    1000FL1

VECEST   DC    100XL1'FF'

* NODO DEL VECTOR DE ESTACIONES
NODOVEC  DS    0CL5
FLAG     DS    C
DIRLIST  DS    CL4

* NODO DE LISTA DE CONEXIONES DE UNA ESTACION
NODLIST  DS    0CL5
ESTACION DS    C
DIRSIG   DS    CL4


* PUNTERO A LISTA DE LINEAS
LINEAS   DC    FL1'-1'

DOBLE    DS    D
EMPAQ    DS    PL2
ZONEADO  DS    ZL2

WTOBLOCK DC    H'84'
         DC    H'0'
TEXTO    DC    80CL1' '
VACIO    DC    80CL1' '

ARCH     DCB   DSNAME=FILENAME,LRECL=2,RECFM=FB,MACRF=GM,EODAD=FINARCH
FILENAME DC    C'tp.dat',X'00'

AUX      DS    CL4
ARCHGET  DS    XL2
FLAGERR  DS    X
         END

